services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mlflowdb
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "minio_user"
      MINIO_ROOT_PASSWORD: "minio_password"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/live"]
      interval: 10s
      timeout: 10s
      retries: 5
    command: server /data --console-address ":9001"
    volumes:
      - ./minio-data:/data

  minio-create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set minio http://minio:9000 minio_user minio_password &&
      if ! mc ls minio | grep --quiet bucket; then
        mc mb minio/bucket;
      else
        echo 'bucket already exists';
      fi
      "

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.0.1
    container_name: mlflow-server
    platform: linux/amd64
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_TRACKING_URI=http://0.0.0.0:5000
      - BACKEND_STORE_URI=postgresql://user:password@postgres:5432/mlflowdb
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - ARTIFACT_STORE=http://minio:9000
      - AWS_ACCESS_KEY_ID=minio_user
      - AWS_SECRET_ACCESS_KEY=minio_password
    volumes:
      - ./mlruns:/mlflow/artifacts
    command: >
      bash -c "
      export DEBIAN_FRONTEND=noninteractive &&
      apt-get update &&
      apt-get install -y apt-utils libpq-dev gcc &&
      apt-get install libpq-dev &&
      pip install boto3 psycopg2-binary &&
      mlflow server
      --backend-store-uri postgresql://user:password@postgres:5432/mlflowdb
      --default-artifact-root s3://bucket
      --host 0.0.0.0
      --port 5000
      "

  nginx:
    image: nginx:latest
    container_name: nginx-mlflow
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro