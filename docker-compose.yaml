services:
  # PostgreSQL database
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mlflowdb
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
  # MinIO server
  minio:
    image: minio/minio
    expose:
      - "9000"
    ports:
      - "9000:9000"
      # MinIO Console is available at http://localhost:9001
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "minio_user"
      MINIO_ROOT_PASSWORD: "minio_password"
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 1s
      timeout: 10s
      retries: 5
    command: server /data --console-address ":9001"
  # Create a bucket named "bucket" if it doesn't exist
  minio-create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      bash -c "
      mc alias set minio http://minio:9000 minio_user minio_password &&
      if ! mc ls minio | grep --quiet bucket; then
        mc mb minio/bucket
      else
        echo 'bucket already exists'
      fi
      "
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.0.1
    container_name: mlflow-server
    platform: linux/amd64
    ports:
      - "5000:5000"  # Expose MLflow server on port 6565
    environment:
      # - MLFLOW_TRACKING_URI=http://0.0.0.0:5000
      # - BACKEND_STORE_URI=sqlite:///mlflow.db  # Using SQLite for simplicity
      # - ARTIFACT_STORE=/mlflow/artifacts  # Store artifacts in a local directory
      - MLFLOW_S3_ENDPOINT_URL: http://localhost:9000
      - AWS_ACCESS_KEY_ID: minio_user
      - AWS_SECRET_ACCESS_KEY: minio_password

    volumes:
      - ./mlruns:/mlflow/artifacts  # Mount local artifact storage directory
      - ./mlflow.db:/mlflow/mlflow.db  # Mount SQLite database file
    command: >
      mlflow server
      --backend-store-uri postgresql://user:password@localhost:5432/mlflowdb
      --default-artifact-root http://localhost:9000
      --host 0.0.0.0
      --port 5000

  nginx:
    image: nginx:latest
    container_name: nginx-mlflow
    ports:
      - "80:80"   # For HTTP traffic
      # - "443:443" # For HTTPS traffic (optional, requires SSL)
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # NGINX configuration file
      # - ./ssl:/etc/ssl:ro  # Optional: Mount SSL certificates for HTTPS